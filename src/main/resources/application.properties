

# PostgreSQL Configuration (Uncomment to use PostgreSQL in production)
spring.datasource.url=jdbc:postgresql://localhost:5432/restaurant_db
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true

# JWT Configuration
app.jwtSecret=cmVzdGF1cmFudE1hbmFnZW1lbnRTZWNyZXRLZXlGb3JKV1RUb2tlblNpZ25pbmdBbmRWZXJpZmljYXRpb24=
app.jwtExpirationMs=86400000

# Server Configuration
server.port=8080

# CORS Configuration
app.cors.allowedOrigins=http://localhost:5173,http://localhost:3000

# Logging Configuration
logging.level.com.restaurant.management=INFO
logging.level.org.springframework.security=DEBUG
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

# Application Configuration
spring.application.name=Restaurant Management System
server.error.include-message=always
server.error.include-binding-errors=always

# Validation Configuration
spring.mvc.throw-exception-if-no-handler-found=true
spring.web.resources.add-mappings=false